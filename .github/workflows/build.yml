name: Build Project

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:     
  versionamento:
    runs-on: ubuntu-latest
    name: Versionamento
    permissions: 
      contents: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with: 
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      
      - uses: codacy/git-version@2.8.0
        id: version
        with: 
          release-branch: main
          prefix: v  

      - name: Tag do reposit√≥rio
        env: 
          GH_TOKEN : ${{ secrets.GITHUB_TOKEN }}   
        run: |
          echo "::notice:: ${{ steps.version.outputs.version }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"
          git tag -a ${{ steps.version.outputs.version }} -m "Release ${{ steps.version.outputs.version }}"
          git push --tags
        if: github.ref == 'refs/heads/main'
            
  backend-build-and-test:
      needs: versionamento
      runs-on: ubuntu-latest
      name: Backend Build and Test
      permissions: 
        contents: write
        id-token: write
        actions: write
        checks: write

      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Setup .NET Core
          uses: actions/setup-dotnet@v4
          with:
            dotnet-version: '8.x'
            cache: true
            cache-dependency-path: ./src/**/packages.lock.json               

        - name: Restore
          run: |
            dotnet restore ./src/Todo.Api.sln            

        - name: Build 
          run: |
            dotnet build --no-restore ./src/Todo.Api.sln
        
        - name: Test 
          run: |
            dotnet test --no-restore --no-build ./src/Todo.Api.sln --configuration Release --logger trx --results-directory "TestResults"
        
        - name: dotnet-test-results
          uses: actions/upload-artifact@v4    
          with:  
            path: TestResults

  frontend-build-and-test:
      if: false
      runs-on: ubuntu-latest
      name: Build Project
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Setup .NET Core
          uses: actions/setup-dotnet@v4
          with:
            dotnet-version: '8.x'

        - name: Build with .NET
          run: |
            dotnet restore ./src/Todo.Api.sln
            dotnet build --no-restore ./src/Todo.Api.sln
          
        - name: Setup Node.js
          uses: actions/setup-node@v4
          with:
            node-version: '20'

        - name: Install Node.js dependencies
          working-directory: ./src/web
          run: |
            npm install
            npm run build        
                  